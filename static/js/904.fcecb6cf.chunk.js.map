{"version":3,"file":"static/js/904.fcecb6cf.chunk.js","mappings":"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","sources":["api/api.js","hooks/useRequest.js","pages/Movies/index.jsx","styles/components.styled.js"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.params = {\n  api_key: 'ac8fbb226a37f835673d1586bcf6a4c6',\n};\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nclass Api {\n  async getTrending() {\n    const { data } = await axios.get('trending/movie/day');\n    return data.results;\n  }\n\n  async searchMovies(query) {\n    const { data } = await axios.get(`search/movie?${query}`);\n    return data;\n  }\n\n  async getMovieDetails(movieId) {\n    const { data } = await axios.get(`movie/${movieId}`);\n    return data;\n  }\n\n  async getMovieCast(movieId) {\n    const { data } = await axios.get(`movie/${movieId}/credits`);\n    return data;\n  }\n\n  async getMovieReviews(movieId) {\n    const { data } = await axios.get(`movie/${movieId}/reviews`);\n    return data;\n  }\n}\n\nconst api = new Api();\nexport default api;\n","const { useState } = require('react');\n\nconst useRequest = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  return { isLoading, setIsLoading, error, setError };\n};\n\nexport default useRequest;\n","import api from 'api/api';\nimport useRequest from 'hooks/useRequest';\nimport { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { StyledLink } from 'styles/components.styled';\n\nconst Movies = () => {\n  const [query, setQuery] = useState('');\n  const [movies, setMovies] = useState([]);\n  const { isLoading, setIsLoading, error, setError } = useRequest();\n  const [search, setSearch] = useSearchParams();\n\n  useEffect(() => {\n    const searchParams = search.toString();\n    if (searchParams) {\n      setIsLoading(true);\n      setError(null);\n      const searchMovies = async () => {\n        try {\n          const { results: movies } = await api.searchMovies(searchParams);\n          setMovies(movies);\n        } catch ({ message }) {\n          setError(message);\n        } finally {\n          setIsLoading(false);\n        }\n      };\n      searchMovies();\n    }\n  }, [search, setError, setIsLoading]);\n\n  const handleChange = ({ target: { value } }) => {\n    setQuery(value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (query) setSearch(`query=${query}`);\n    setQuery('');\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <input type=\"text\" value={query} onChange={handleChange} />\n        <button type=\"submit\">Search</button>\n      </form>\n      {isLoading ? (\n        <p>Loading...</p>\n      ) : error ? (\n        <p>{error}</p>\n      ) : (\n        movies.length > 0 && (\n          <ul>\n            {movies.map(({ id, title, overview, poster_path }) => (\n              <li key={id}>\n                <StyledLink\n                  to={`/movies/${id}`}\n                  state={{ from: `/movies?${search}` }}\n                >\n                  {' '}\n                  {title}\n                  <img\n                    height={100}\n                    weight={100}\n                    src={\n                      poster_path\n                        ? `https://image.tmdb.org/t/p/w500/${poster_path}`\n                        : 'https://i.imgur.com/jtwlswk.png'\n                    }\n                    alt={overview}\n                  />\n                </StyledLink>\n              </li>\n            ))}\n          </ul>\n        )\n      )}\n    </div>\n  );\n};\n\nexport default Movies;\n","import { Link, NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst AppWrapper = styled.div`\n  height: '100vh';\n  display: 'flex';\n  justify-content: 'center';\n  align-items: 'center';\n`;\n\nconst StyledLink = styled(Link)`\n  color: blue;\n`;\n\nconst StyledNavLink = styled(NavLink)`\n  color: black;\n  &.active {\n    color: red;\n  }\n`;\n\nconst BackLink = styled(StyledLink)`\n  display: block;\n`;\n\nexport { AppWrapper, StyledLink, StyledNavLink, BackLink };\n"],"names":["axios","api_key","async","data","results","query","concat","movieId","useState","require","useRequest","isLoading","setIsLoading","error","setError","Movies","setQuery","movies","setMovies","search","setSearch","useSearchParams","useEffect","searchParams","toString","searchMovies","api","message","_jsxs","children","onSubmit","e","preventDefault","_jsx","type","value","onChange","_ref","target","length","map","_ref2","id","title","overview","poster_path","StyledLink","to","state","from","height","weight","src","alt","styled","_templateObject","_taggedTemplateLiteral","Link","_templateObject2","StyledNavLink","NavLink","_templateObject3","BackLink","_templateObject4"],"sourceRoot":""}