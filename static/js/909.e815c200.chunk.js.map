{"version":3,"file":"static/js/909.e815c200.chunk.js","mappings":"8JAEAA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBC,QAAS,oCAEXD,EAAAA,EAAAA,SAAAA,QAAyB,+BA6BzB,MACA,EADY,IA3BZ,MACEE,oBACE,MAAM,KAAEC,SAAeH,EAAAA,EAAAA,IAAU,sBACjC,OAAOG,EAAKC,OACd,CAEAF,mBAAmBG,GACjB,MAAM,KAAEF,SAAeH,EAAAA,EAAAA,IAAU,gBAADM,OAAiBD,IACjD,OAAOF,CACT,CAEAD,sBAAsBK,GACpB,MAAM,KAAEJ,SAAeH,EAAAA,EAAAA,IAAU,SAADM,OAAUC,IAC1C,OAAOJ,CACT,CAEAD,mBAAmBK,GACjB,MAAM,KAAEJ,SAAeH,EAAAA,EAAAA,IAAU,SAADM,OAAUC,EAAO,aACjD,OAAOJ,CACT,CAEAD,sBAAsBK,GACpB,MAAM,KAAEJ,SAAeH,EAAAA,EAAAA,IAAU,SAADM,OAAUC,EAAO,aACjD,OAAOJ,CACT,E,iCC/BF,MAAM,SAAEK,GAAaC,EAAQ,KAQ7B,EANmBC,KACjB,MAAOC,EAAWC,GAAgBJ,GAAS,IACpCK,EAAOC,GAAYN,EAAS,MACnC,MAAO,CAAEG,YAAWC,eAAcC,QAAOC,WAAU,C,yHCHrD,MAAMC,EAAcC,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,iEAMxBC,EAAmBH,EAAAA,GAAAA,IAAUI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,qEAM7BG,EAAaL,EAAAA,GAAAA,GAASM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,0CAKtBK,EAAiBP,EAAAA,GAAAA,GAASQ,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,iE,aCPhC,MAqFA,EArFqBO,KAAO,IAADC,EACzB,MAAM,QAAEnB,IAAYoB,EAAAA,EAAAA,OACd,UAAEhB,EAAS,aAAEC,EAAY,MAAEC,EAAK,SAAEC,IAAaJ,EAAAA,EAAAA,MAC9CkB,EAAOC,IAAYrB,EAAAA,EAAAA,UAAS,OAC7B,MAAEsB,IAAUC,EAAAA,EAAAA,OAElBC,EAAAA,EAAAA,YAAU,KACW9B,WACjBU,GAAa,GACbE,EAAS,MACT,IACE,MAAMX,QAAa8B,EAAAA,EAAAA,gBAAoB1B,GACvCsB,EAAS1B,EAKX,CAJE,OAAO,QAAE+B,IACTpB,EAASoB,EACX,CAAC,QACCtB,GAAa,EACf,GAEFuB,EAAY,GACX,CAAC5B,EAASO,EAAUF,IAEvB,MAAM,YAAEwB,EAAW,SAAEC,EAAQ,MAAEC,EAAK,aAAEC,EAAY,OAAEC,EAAM,aAAEC,GACrD,OAALb,QAAK,IAALA,EAAAA,EAAS,CAAC,EACNc,EAAmB,OAAZH,QAAY,IAAZA,OAAY,EAAZA,EAAcI,MAAM,KAAK,GAChCC,EAA2B,QAArBlB,EAAmB,GAAfe,SAAiB,IAAAf,OAAA,EAAlBA,EAAqBmB,QAAQ,IAEtC,KAAEC,GAAc,OAALhB,QAAK,IAALA,EAAAA,EAAS,CAAC,EAE3B,OACEiB,EAAAA,EAAAA,MAACC,EAAAA,GAAS,CAAAC,SAAA,CACPH,IAAQI,EAAAA,EAAAA,KAACC,EAAAA,GAAQ,CAACC,GAAIN,EAAKG,SAAE,YAE7BtC,GACCuC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,eACDpC,GACFqC,EAAAA,EAAAA,KAAA,KAAAD,SAAIpC,IAEJe,IACEmB,EAAAA,EAAAA,MAAChC,EAAW,CAAAkC,SAAA,EACVC,EAAAA,EAAAA,KAAA,OACEG,OAAQ,IACRC,OAAQ,IACRC,IACEnB,EAAW,mCAAA9B,OAC4B8B,GACnC,kCAENoB,IAAKnB,KAEPU,EAAAA,EAAAA,MAAC5B,EAAgB,CAAA8B,SAAA,EACfC,EAAAA,EAAAA,KAAA,MAAAD,SAAA,GAAA3C,OAAQgC,EAAK,MAAAhC,OAAKoC,EAAI,QACtBK,EAAAA,EAAAA,MAAA,KAAAE,SAAA,CAAG,eAAaL,EAAO,QACvBM,EAAAA,EAAAA,KAAA,MAAAD,SAAI,cACJC,EAAAA,EAAAA,KAAA,KAAAD,SAAIZ,KACJa,EAAAA,EAAAA,KAAA,MAAAD,SAAI,YACJC,EAAAA,EAAAA,KAAC7B,EAAU,CAAA4B,SACRT,EAAOiB,KAAIC,IAAA,IAAC,GAAEC,EAAE,KAAEC,GAAMF,EAAA,OACvBR,EAAAA,EAAAA,KAAA,QAAAD,SAAgBW,GAALD,EAAiB,aAQxCT,EAAAA,EAAAA,KAAA,QAAAD,SAAM,6BACNF,EAAAA,EAAAA,MAACxB,EAAc,CAAA0B,SAAA,EACbC,EAAAA,EAAAA,KAAA,MAAAD,UACEC,EAAAA,EAAAA,KAACW,EAAAA,GAAU,CAACT,GAAG,OAAOtB,MAAO,CAAEgB,QAAOG,SAAC,YAIzCC,EAAAA,EAAAA,KAAA,MAAAD,UACEC,EAAAA,EAAAA,KAACW,EAAAA,GAAU,CAACT,GAAG,UAAUtB,MAAO,CAAEgB,QAAOG,SAAC,kBAM9CC,EAAAA,EAAAA,KAACY,EAAAA,GAAM,MACG,C,8GC1FhB,MAAMC,EAAa/C,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,4BAIvB2C,GAAa7C,EAAAA,EAAAA,IAAOgD,EAAAA,GAAPhD,CAAYI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,0BAIzB+C,GAAgBjD,EAAAA,EAAAA,IAAOkD,EAAAA,GAAPlD,CAAeM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,+DAO/BiC,GAAWnC,EAAAA,EAAAA,IAAO6C,EAAP7C,CAAkBQ,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,6BAI7B8B,EAAYhC,EAAAA,GAAAA,IAAUmD,IAAAA,GAAAjD,EAAAA,EAAAA,GAAA,2B","sources":["api/api.js","hooks/useRequest.js","pages/MovieDetails/movie-details.styled.js","pages/MovieDetails/index.jsx","styles/components.styled.js"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.params = {\n  api_key: 'ac8fbb226a37f835673d1586bcf6a4c6',\n};\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nclass Api {\n  async getTrending() {\n    const { data } = await axios.get('trending/movie/day');\n    return data.results;\n  }\n\n  async searchMovies(query) {\n    const { data } = await axios.get(`search/movie?${query}`);\n    return data;\n  }\n\n  async getMovieDetails(movieId) {\n    const { data } = await axios.get(`movie/${movieId}`);\n    return data;\n  }\n\n  async getMovieCast(movieId) {\n    const { data } = await axios.get(`movie/${movieId}/credits`);\n    return data;\n  }\n\n  async getMovieReviews(movieId) {\n    const { data } = await axios.get(`movie/${movieId}/reviews`);\n    return data;\n  }\n}\n\nconst api = new Api();\nexport default api;\n","const { useState } = require('react');\n\nconst useRequest = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  return { isLoading, setIsLoading, error, setError };\n};\n\nexport default useRequest;\n","import styled from 'styled-components';\n\nconst InfoSection = styled.div`\n  display: flex;\n  gap: 30px;\n  margin: 0 0 30px 0;\n`;\n\nconst MovieDescription = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n`;\n\nconst GenresList = styled.ul`\n  display: flex;\n  gap: 10px;\n`;\n\nconst AdditionalList = styled.ul`\n  display: flex;\n  gap: 10px;\n  margin: 0 0 15px 0;\n`;\n\nexport { InfoSection, MovieDescription, GenresList, AdditionalList };\n","import api from 'api/api';\nimport useRequest from 'hooks/useRequest';\nimport { useEffect, useState } from 'react';\nimport { Outlet, useLocation, useParams } from 'react-router-dom';\nimport { BackLink, Container, StyledLink } from 'styles/components.styled';\nimport {\n  AdditionalList,\n  GenresList,\n  InfoSection,\n  MovieDescription,\n} from './movie-details.styled';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const { isLoading, setIsLoading, error, setError } = useRequest();\n  const [movie, setMovie] = useState(null);\n  const { state } = useLocation();\n\n  useEffect(() => {\n    const getDetails = async () => {\n      setIsLoading(true);\n      setError(null);\n      try {\n        const data = await api.getMovieDetails(movieId);\n        setMovie(data);\n      } catch ({ message }) {\n        setError(message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    getDetails();\n  }, [movieId, setError, setIsLoading]);\n\n  const { poster_path, overview, title, release_date, genres, vote_average } =\n    movie ?? {};\n  const date = release_date?.split('-')[0];\n  const rating = (vote_average * 10)?.toFixed(0);\n\n  const { from } = state ?? {};\n\n  return (\n    <Container>\n      {from && <BackLink to={from}>{'<- Back'}</BackLink>}\n\n      {isLoading ? (\n        <p>Loading...</p>\n      ) : error ? (\n        <p>{error}</p>\n      ) : (\n        movie && (\n          <InfoSection>\n            <img\n              height={500}\n              weight={500}\n              src={\n                poster_path\n                  ? `https://image.tmdb.org/t/p/w500/${poster_path}`\n                  : 'https://i.imgur.com/jtwlswk.png'\n              }\n              alt={overview}\n            />\n            <MovieDescription>\n              <h2>{`${title} (${date})`}</h2>\n              <p>User score: {rating}%</p>\n              <h3>Overwiew</h3>\n              <p>{overview}</p>\n              <h3>Genres</h3>\n              <GenresList>\n                {genres.map(({ id, name }) => (\n                  <span key={id}>{name}</span>\n                ))}\n              </GenresList>\n            </MovieDescription>\n          </InfoSection>\n        )\n      )}\n\n      <span>Additional information:</span>\n      <AdditionalList>\n        <li>\n          <StyledLink to=\"cast\" state={{ from }}>\n            Cast\n          </StyledLink>\n        </li>\n        <li>\n          <StyledLink to=\"reviews\" state={{ from }}>\n            Reviews\n          </StyledLink>\n        </li>\n      </AdditionalList>\n\n      <Outlet />\n    </Container>\n  );\n};\n\nexport default MovieDetails;\n","import { Link, NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst AppWrapper = styled.div`\n  height: 100vh;\n`;\n\nconst StyledLink = styled(Link)`\n  color: blue;\n`;\n\nconst StyledNavLink = styled(NavLink)`\n  color: black;\n  &.active {\n    color: red;\n  }\n`;\n\nconst BackLink = styled(StyledLink)`\n  display: block;\n`;\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nexport { AppWrapper, StyledLink, StyledNavLink, BackLink, Container };\n"],"names":["axios","api_key","async","data","results","query","concat","movieId","useState","require","useRequest","isLoading","setIsLoading","error","setError","InfoSection","styled","_templateObject","_taggedTemplateLiteral","MovieDescription","_templateObject2","GenresList","_templateObject3","AdditionalList","_templateObject4","MovieDetails","_ref","useParams","movie","setMovie","state","useLocation","useEffect","api","message","getDetails","poster_path","overview","title","release_date","genres","vote_average","date","split","rating","toFixed","from","_jsxs","Container","children","_jsx","BackLink","to","height","weight","src","alt","map","_ref2","id","name","StyledLink","Outlet","AppWrapper","Link","StyledNavLink","NavLink","_templateObject5"],"sourceRoot":""}