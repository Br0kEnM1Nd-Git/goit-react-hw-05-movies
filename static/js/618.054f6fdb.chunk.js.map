{"version":3,"file":"static/js/618.054f6fdb.chunk.js","mappings":"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","sources":["api/api.js","hooks/useRequest.js","pages/MovieDetails/index.jsx","styles/components.styled.js"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.params = {\n  api_key: 'ac8fbb226a37f835673d1586bcf6a4c6',\n};\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nclass Api {\n  async getTrending() {\n    const { data } = await axios.get('trending/movie/day');\n    return data.results;\n  }\n\n  async searchMovies(query) {\n    const { data } = await axios.get(`search/movie?${query}`);\n    return data;\n  }\n\n  async getMovieDetails(movieId) {\n    const { data } = await axios.get(`movie/${movieId}`);\n    return data;\n  }\n\n  async getMovieCast(movieId) {\n    const { data } = await axios.get(`movie/${movieId}/credits`);\n    return data;\n  }\n\n  async getMovieReviews(movieId) {\n    const { data } = await axios.get(`movie/${movieId}/reviews`);\n    return data;\n  }\n}\n\nconst api = new Api();\nexport default api;\n","const { useState } = require('react');\n\nconst useRequest = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  return { isLoading, setIsLoading, error, setError };\n};\n\nexport default useRequest;\n","import api from 'api/api';\nimport useRequest from 'hooks/useRequest';\nimport { useEffect, useState } from 'react';\nimport { Outlet, useLocation, useParams } from 'react-router-dom';\nimport { BackLink, StyledLink } from 'styles/components.styled';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const { isLoading, setIsLoading, error, setError } = useRequest();\n  const [movie, setMovie] = useState(null);\n  const { state } = useLocation();\n\n  useEffect(() => {\n    const getDetails = async () => {\n      setIsLoading(true);\n      setError(null);\n      try {\n        const data = await api.getMovieDetails(movieId);\n        setMovie(data);\n      } catch ({ message }) {\n        setError(message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    getDetails();\n  }, [movieId, setError, setIsLoading]);\n\n  const { poster_path, overview, title, release_date, genres, vote_average } =\n    movie ?? {};\n  const date = release_date?.split('-')[0];\n  const rating = (vote_average * 10)?.toFixed(0);\n\n  const { from } = state ?? {};\n\n  return (\n    <div>\n      {from && <BackLink to={from}>{'<- Back'}</BackLink>}\n      {isLoading ? (\n        <p>Loading...</p>\n      ) : error ? (\n        <p>{error}</p>\n      ) : (\n        movie && (\n          <>\n            <img\n              height={500}\n              weight={500}\n              src={\n                poster_path\n                  ? `https://image.tmdb.org/t/p/w500/${poster_path}`\n                  : 'https://i.imgur.com/jtwlswk.png'\n              }\n              alt={overview}\n            />\n            <h2>{`${title} (${date})`}</h2>\n            <p>User score: {rating}%</p>\n            <h3>Overwiew</h3>\n            <p>{overview}</p>\n            <h3>Genres</h3>\n            <div>\n              {genres.map(({ id, name }) => (\n                <span key={id}>{name}</span>\n              ))}\n            </div>\n            <span>Additional information:</span>\n            <StyledLink to=\"cast\">Cast</StyledLink>\n            <StyledLink to=\"reviews\">Reviews</StyledLink>\n          </>\n        )\n      )}\n      <Outlet />\n    </div>\n  );\n};\n\nexport default MovieDetails;\n","import { Link, NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst AppWrapper = styled.div`\n  height: '100vh';\n  display: 'flex';\n  justify-content: 'center';\n  align-items: 'center';\n`;\n\nconst StyledLink = styled(Link)`\n  color: blue;\n`;\n\nconst StyledNavLink = styled(NavLink)`\n  color: black;\n  &.active {\n    color: red;\n  }\n`;\n\nconst BackLink = styled(StyledLink)`\n  display: block;\n`;\n\nexport { AppWrapper, StyledLink, StyledNavLink, BackLink };\n"],"names":["axios","api_key","async","data","results","query","concat","movieId","useState","require","useRequest","isLoading","setIsLoading","error","setError","MovieDetails","_ref","useParams","movie","setMovie","state","useLocation","useEffect","api","message","getDetails","poster_path","overview","title","release_date","genres","vote_average","date","split","rating","toFixed","from","_jsxs","children","_jsx","BackLink","to","_Fragment","height","weight","src","alt","map","_ref2","id","name","StyledLink","Outlet","styled","_templateObject","_taggedTemplateLiteral","Link","_templateObject2","StyledNavLink","NavLink","_templateObject3","_templateObject4"],"sourceRoot":""}